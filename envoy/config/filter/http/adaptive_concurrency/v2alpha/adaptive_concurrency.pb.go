// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/http/adaptive_concurrency/v2alpha/adaptive_concurrency.proto

package envoy_config_filter_http_adaptive_concurrency_v2alpha

import (
	fmt "fmt"
	core "github.com/envoyproxy/go-control-plane/envoy/api/v2/core"
	_type "github.com/envoyproxy/go-control-plane/envoy/type"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GradientControllerConfig struct {
	SampleAggregatePercentile *_type.Percent                                              `protobuf:"bytes,1,opt,name=sample_aggregate_percentile,json=sampleAggregatePercentile,proto3" json:"sample_aggregate_percentile,omitempty"`
	ConcurrencyLimitParams    *GradientControllerConfig_ConcurrencyLimitCalculationParams `protobuf:"bytes,2,opt,name=concurrency_limit_params,json=concurrencyLimitParams,proto3" json:"concurrency_limit_params,omitempty"`
	MinRttCalcParams          *GradientControllerConfig_MinimumRTTCalculationParams       `protobuf:"bytes,3,opt,name=min_rtt_calc_params,json=minRttCalcParams,proto3" json:"min_rtt_calc_params,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                                                    `json:"-"`
	XXX_unrecognized          []byte                                                      `json:"-"`
	XXX_sizecache             int32                                                       `json:"-"`
}

func (m *GradientControllerConfig) Reset()         { *m = GradientControllerConfig{} }
func (m *GradientControllerConfig) String() string { return proto.CompactTextString(m) }
func (*GradientControllerConfig) ProtoMessage()    {}
func (*GradientControllerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_c58a0beecb0ec580, []int{0}
}

func (m *GradientControllerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GradientControllerConfig.Unmarshal(m, b)
}
func (m *GradientControllerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GradientControllerConfig.Marshal(b, m, deterministic)
}
func (m *GradientControllerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GradientControllerConfig.Merge(m, src)
}
func (m *GradientControllerConfig) XXX_Size() int {
	return xxx_messageInfo_GradientControllerConfig.Size(m)
}
func (m *GradientControllerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GradientControllerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GradientControllerConfig proto.InternalMessageInfo

func (m *GradientControllerConfig) GetSampleAggregatePercentile() *_type.Percent {
	if m != nil {
		return m.SampleAggregatePercentile
	}
	return nil
}

func (m *GradientControllerConfig) GetConcurrencyLimitParams() *GradientControllerConfig_ConcurrencyLimitCalculationParams {
	if m != nil {
		return m.ConcurrencyLimitParams
	}
	return nil
}

func (m *GradientControllerConfig) GetMinRttCalcParams() *GradientControllerConfig_MinimumRTTCalculationParams {
	if m != nil {
		return m.MinRttCalcParams
	}
	return nil
}

type GradientControllerConfig_ConcurrencyLimitCalculationParams struct {
	MaxConcurrencyLimit       *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=max_concurrency_limit,json=maxConcurrencyLimit,proto3" json:"max_concurrency_limit,omitempty"`
	ConcurrencyUpdateInterval *duration.Duration    `protobuf:"bytes,3,opt,name=concurrency_update_interval,json=concurrencyUpdateInterval,proto3" json:"concurrency_update_interval,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}              `json:"-"`
	XXX_unrecognized          []byte                `json:"-"`
	XXX_sizecache             int32                 `json:"-"`
}

func (m *GradientControllerConfig_ConcurrencyLimitCalculationParams) Reset() {
	*m = GradientControllerConfig_ConcurrencyLimitCalculationParams{}
}
func (m *GradientControllerConfig_ConcurrencyLimitCalculationParams) String() string {
	return proto.CompactTextString(m)
}
func (*GradientControllerConfig_ConcurrencyLimitCalculationParams) ProtoMessage() {}
func (*GradientControllerConfig_ConcurrencyLimitCalculationParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_c58a0beecb0ec580, []int{0, 0}
}

func (m *GradientControllerConfig_ConcurrencyLimitCalculationParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GradientControllerConfig_ConcurrencyLimitCalculationParams.Unmarshal(m, b)
}
func (m *GradientControllerConfig_ConcurrencyLimitCalculationParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GradientControllerConfig_ConcurrencyLimitCalculationParams.Marshal(b, m, deterministic)
}
func (m *GradientControllerConfig_ConcurrencyLimitCalculationParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GradientControllerConfig_ConcurrencyLimitCalculationParams.Merge(m, src)
}
func (m *GradientControllerConfig_ConcurrencyLimitCalculationParams) XXX_Size() int {
	return xxx_messageInfo_GradientControllerConfig_ConcurrencyLimitCalculationParams.Size(m)
}
func (m *GradientControllerConfig_ConcurrencyLimitCalculationParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GradientControllerConfig_ConcurrencyLimitCalculationParams.DiscardUnknown(m)
}

var xxx_messageInfo_GradientControllerConfig_ConcurrencyLimitCalculationParams proto.InternalMessageInfo

func (m *GradientControllerConfig_ConcurrencyLimitCalculationParams) GetMaxConcurrencyLimit() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxConcurrencyLimit
	}
	return nil
}

func (m *GradientControllerConfig_ConcurrencyLimitCalculationParams) GetConcurrencyUpdateInterval() *duration.Duration {
	if m != nil {
		return m.ConcurrencyUpdateInterval
	}
	return nil
}

type GradientControllerConfig_MinimumRTTCalculationParams struct {
	Interval             *duration.Duration    `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
	RequestCount         *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=request_count,json=requestCount,proto3" json:"request_count,omitempty"`
	Jitter               *_type.Percent        `protobuf:"bytes,3,opt,name=jitter,proto3" json:"jitter,omitempty"`
	MinConcurrency       *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=min_concurrency,json=minConcurrency,proto3" json:"min_concurrency,omitempty"`
	Buffer               *_type.Percent        `protobuf:"bytes,5,opt,name=buffer,proto3" json:"buffer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GradientControllerConfig_MinimumRTTCalculationParams) Reset() {
	*m = GradientControllerConfig_MinimumRTTCalculationParams{}
}
func (m *GradientControllerConfig_MinimumRTTCalculationParams) String() string {
	return proto.CompactTextString(m)
}
func (*GradientControllerConfig_MinimumRTTCalculationParams) ProtoMessage() {}
func (*GradientControllerConfig_MinimumRTTCalculationParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_c58a0beecb0ec580, []int{0, 1}
}

func (m *GradientControllerConfig_MinimumRTTCalculationParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GradientControllerConfig_MinimumRTTCalculationParams.Unmarshal(m, b)
}
func (m *GradientControllerConfig_MinimumRTTCalculationParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GradientControllerConfig_MinimumRTTCalculationParams.Marshal(b, m, deterministic)
}
func (m *GradientControllerConfig_MinimumRTTCalculationParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GradientControllerConfig_MinimumRTTCalculationParams.Merge(m, src)
}
func (m *GradientControllerConfig_MinimumRTTCalculationParams) XXX_Size() int {
	return xxx_messageInfo_GradientControllerConfig_MinimumRTTCalculationParams.Size(m)
}
func (m *GradientControllerConfig_MinimumRTTCalculationParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GradientControllerConfig_MinimumRTTCalculationParams.DiscardUnknown(m)
}

var xxx_messageInfo_GradientControllerConfig_MinimumRTTCalculationParams proto.InternalMessageInfo

func (m *GradientControllerConfig_MinimumRTTCalculationParams) GetInterval() *duration.Duration {
	if m != nil {
		return m.Interval
	}
	return nil
}

func (m *GradientControllerConfig_MinimumRTTCalculationParams) GetRequestCount() *wrappers.UInt32Value {
	if m != nil {
		return m.RequestCount
	}
	return nil
}

func (m *GradientControllerConfig_MinimumRTTCalculationParams) GetJitter() *_type.Percent {
	if m != nil {
		return m.Jitter
	}
	return nil
}

func (m *GradientControllerConfig_MinimumRTTCalculationParams) GetMinConcurrency() *wrappers.UInt32Value {
	if m != nil {
		return m.MinConcurrency
	}
	return nil
}

func (m *GradientControllerConfig_MinimumRTTCalculationParams) GetBuffer() *_type.Percent {
	if m != nil {
		return m.Buffer
	}
	return nil
}

type AdaptiveConcurrency struct {
	// Types that are valid to be assigned to ConcurrencyControllerConfig:
	//	*AdaptiveConcurrency_GradientControllerConfig
	ConcurrencyControllerConfig isAdaptiveConcurrency_ConcurrencyControllerConfig `protobuf_oneof:"concurrency_controller_config"`
	Enabled                     *core.RuntimeFeatureFlag                          `protobuf:"bytes,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                                          `json:"-"`
	XXX_unrecognized            []byte                                            `json:"-"`
	XXX_sizecache               int32                                             `json:"-"`
}

func (m *AdaptiveConcurrency) Reset()         { *m = AdaptiveConcurrency{} }
func (m *AdaptiveConcurrency) String() string { return proto.CompactTextString(m) }
func (*AdaptiveConcurrency) ProtoMessage()    {}
func (*AdaptiveConcurrency) Descriptor() ([]byte, []int) {
	return fileDescriptor_c58a0beecb0ec580, []int{1}
}

func (m *AdaptiveConcurrency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdaptiveConcurrency.Unmarshal(m, b)
}
func (m *AdaptiveConcurrency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdaptiveConcurrency.Marshal(b, m, deterministic)
}
func (m *AdaptiveConcurrency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdaptiveConcurrency.Merge(m, src)
}
func (m *AdaptiveConcurrency) XXX_Size() int {
	return xxx_messageInfo_AdaptiveConcurrency.Size(m)
}
func (m *AdaptiveConcurrency) XXX_DiscardUnknown() {
	xxx_messageInfo_AdaptiveConcurrency.DiscardUnknown(m)
}

var xxx_messageInfo_AdaptiveConcurrency proto.InternalMessageInfo

type isAdaptiveConcurrency_ConcurrencyControllerConfig interface {
	isAdaptiveConcurrency_ConcurrencyControllerConfig()
}

type AdaptiveConcurrency_GradientControllerConfig struct {
	GradientControllerConfig *GradientControllerConfig `protobuf:"bytes,1,opt,name=gradient_controller_config,json=gradientControllerConfig,proto3,oneof"`
}

func (*AdaptiveConcurrency_GradientControllerConfig) isAdaptiveConcurrency_ConcurrencyControllerConfig() {
}

func (m *AdaptiveConcurrency) GetConcurrencyControllerConfig() isAdaptiveConcurrency_ConcurrencyControllerConfig {
	if m != nil {
		return m.ConcurrencyControllerConfig
	}
	return nil
}

func (m *AdaptiveConcurrency) GetGradientControllerConfig() *GradientControllerConfig {
	if x, ok := m.GetConcurrencyControllerConfig().(*AdaptiveConcurrency_GradientControllerConfig); ok {
		return x.GradientControllerConfig
	}
	return nil
}

func (m *AdaptiveConcurrency) GetEnabled() *core.RuntimeFeatureFlag {
	if m != nil {
		return m.Enabled
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AdaptiveConcurrency) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AdaptiveConcurrency_GradientControllerConfig)(nil),
	}
}

func init() {
	proto.RegisterType((*GradientControllerConfig)(nil), "envoy.config.filter.http.adaptive_concurrency.v2alpha.GradientControllerConfig")
	proto.RegisterType((*GradientControllerConfig_ConcurrencyLimitCalculationParams)(nil), "envoy.config.filter.http.adaptive_concurrency.v2alpha.GradientControllerConfig.ConcurrencyLimitCalculationParams")
	proto.RegisterType((*GradientControllerConfig_MinimumRTTCalculationParams)(nil), "envoy.config.filter.http.adaptive_concurrency.v2alpha.GradientControllerConfig.MinimumRTTCalculationParams")
	proto.RegisterType((*AdaptiveConcurrency)(nil), "envoy.config.filter.http.adaptive_concurrency.v2alpha.AdaptiveConcurrency")
}

func init() {
	proto.RegisterFile("envoy/config/filter/http/adaptive_concurrency/v2alpha/adaptive_concurrency.proto", fileDescriptor_c58a0beecb0ec580)
}

var fileDescriptor_c58a0beecb0ec580 = []byte{
	// 676 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xad, 0xd3, 0xbf, 0x68, 0xbe, 0xbf, 0xca, 0xd1, 0x07, 0x6e, 0x5a, 0x50, 0xa9, 0x40, 0x42,
	0x45, 0x1a, 0x4b, 0xa9, 0x58, 0xa3, 0x3a, 0xa8, 0x50, 0xc4, 0x4f, 0x64, 0x5a, 0x24, 0x56, 0xd6,
	0x8d, 0x73, 0xe3, 0x0e, 0x8c, 0x67, 0xa6, 0x93, 0x71, 0x68, 0x5e, 0x81, 0x0d, 0x5b, 0xd8, 0xb3,
	0x62, 0xcf, 0xab, 0xf0, 0x06, 0xbc, 0x03, 0xea, 0x0a, 0xd9, 0x33, 0x69, 0xa3, 0x36, 0x2d, 0x6a,
	0xd5, 0x5d, 0xa2, 0x7b, 0xcf, 0x39, 0xf7, 0x9e, 0x7b, 0x3c, 0xa4, 0x83, 0x62, 0x28, 0x47, 0x61,
	0x2a, 0x45, 0x9f, 0x65, 0x61, 0x9f, 0x71, 0x83, 0x3a, 0xdc, 0x37, 0x46, 0x85, 0xd0, 0x03, 0x65,
	0xd8, 0x10, 0x93, 0x54, 0x8a, 0xb4, 0xd0, 0x1a, 0x45, 0x3a, 0x0a, 0x87, 0x2d, 0xe0, 0x6a, 0x1f,
	0xa6, 0x16, 0xa9, 0xd2, 0xd2, 0x48, 0xff, 0x61, 0xc5, 0x48, 0x2d, 0x23, 0xb5, 0x8c, 0xb4, 0x64,
	0xa4, 0x53, 0x41, 0x8e, 0xb1, 0xb9, 0x6a, 0x07, 0x01, 0xc5, 0xc2, 0x61, 0x2b, 0x4c, 0xa5, 0xc6,
	0xb0, 0x0b, 0x03, 0xb4, 0xa4, 0xcd, 0xc0, 0x56, 0xcd, 0x48, 0x61, 0xa8, 0x50, 0xa7, 0x28, 0x8c,
	0xab, 0xac, 0x66, 0x52, 0x66, 0x1c, 0x2b, 0x20, 0x08, 0x21, 0x0d, 0x18, 0x26, 0xc5, 0xc0, 0x55,
	0x6f, 0xbb, 0x6a, 0xf5, 0xaf, 0x5b, 0xf4, 0xc3, 0x5e, 0xa1, 0xab, 0x86, 0xf3, 0xea, 0x1f, 0x34,
	0x28, 0x85, 0x7a, 0x8c, 0xbf, 0x39, 0x04, 0xce, 0x7a, 0x60, 0x30, 0x1c, 0xff, 0xb0, 0x85, 0xf5,
	0x4f, 0x75, 0x12, 0x3c, 0xd1, 0xd0, 0x63, 0x28, 0x4c, 0x5b, 0x0a, 0xa3, 0x25, 0xe7, 0xa8, 0xdb,
	0xd5, 0xd2, 0xfe, 0x6b, 0xb2, 0x32, 0x80, 0x5c, 0x71, 0x4c, 0x20, 0xcb, 0x34, 0x66, 0x60, 0x30,
	0x71, 0x53, 0x33, 0x8e, 0x81, 0xb7, 0xe6, 0xdd, 0xff, 0xab, 0xd5, 0xa0, 0xd6, 0xa8, 0x72, 0x27,
	0xda, 0xb1, 0xd5, 0x78, 0xd9, 0xe2, 0xb6, 0xc6, 0xb0, 0xce, 0x31, 0xca, 0xff, 0xee, 0x91, 0x60,
	0xc2, 0xb8, 0x84, 0xb3, 0x9c, 0x99, 0x44, 0x81, 0x86, 0x7c, 0x10, 0xd4, 0x2a, 0xca, 0x03, 0x7a,
	0x25, 0xef, 0xe9, 0x79, 0x8b, 0xd0, 0xf6, 0x49, 0xf3, 0xf3, 0x52, 0xae, 0x0d, 0x3c, 0x2d, 0x78,
	0x65, 0x60, 0xa7, 0x12, 0x8e, 0xea, 0x47, 0xd1, 0xfc, 0x47, 0xaf, 0xb6, 0xe4, 0xc5, 0x37, 0xd2,
	0x53, 0xcd, 0xb6, 0xc3, 0xff, 0xea, 0x91, 0x46, 0xce, 0x44, 0xa2, 0x8d, 0x49, 0x52, 0xe0, 0xe9,
	0x78, 0xe4, 0xd9, 0x6a, 0xe4, 0xf7, 0xd7, 0x3d, 0xf2, 0x0b, 0x26, 0x58, 0x5e, 0xe4, 0xf1, 0xee,
	0xee, 0x45, 0xc3, 0x2e, 0xe5, 0x4c, 0xc4, 0xa6, 0xda, 0xc7, 0xd6, 0x9a, 0x3f, 0x3d, 0x72, 0xe7,
	0x8f, 0xeb, 0xfa, 0x6f, 0xc9, 0xff, 0x39, 0x1c, 0x26, 0x67, 0xee, 0xe0, 0x0e, 0xb0, 0x4a, 0x6d,
	0x9e, 0xe8, 0x38, 0x4f, 0x74, 0x6f, 0x47, 0x98, 0xcd, 0xd6, 0x1b, 0xe0, 0x05, 0x46, 0x8b, 0x47,
	0xd1, 0xdc, 0x46, 0x6d, 0x6d, 0x26, 0x6e, 0xe4, 0x70, 0x78, 0x5a, 0xcb, 0x47, 0xb2, 0x32, 0x49,
	0x5b, 0xa8, 0x32, 0x6d, 0x09, 0x13, 0x06, 0xf5, 0x10, 0xb8, 0xb3, 0x6b, 0xf9, 0x8c, 0xc0, 0x63,
	0x17, 0xe8, 0x88, 0x1c, 0x45, 0x8b, 0xdf, 0xbc, 0xb9, 0xba, 0xb7, 0x31, 0x13, 0x2f, 0x4f, 0x30,
	0xed, 0x55, 0x44, 0x3b, 0x8e, 0xa7, 0xf9, 0xa3, 0x46, 0x56, 0x2e, 0xf0, 0xc8, 0xdf, 0x22, 0xf5,
	0x63, 0x4d, 0xef, 0x32, 0x9a, 0xc7, 0x30, 0xff, 0x19, 0xf9, 0x47, 0xe3, 0x41, 0x81, 0x03, 0x93,
	0xa4, 0xb2, 0x10, 0x97, 0x34, 0xe7, 0x6f, 0x87, 0x6d, 0x97, 0x50, 0xff, 0x01, 0x59, 0x78, 0xc7,
	0x8c, 0x41, 0xed, 0x0c, 0x98, 0xfa, 0xd5, 0xb8, 0x16, 0xff, 0x25, 0xf9, 0xaf, 0x4c, 0xda, 0xc4,
	0xf2, 0xc1, 0xdc, 0x65, 0xa4, 0xff, 0xcd, 0x99, 0x98, 0xb8, 0x4b, 0x29, 0xde, 0x2d, 0xfa, 0x7d,
	0xd4, 0xc1, 0xfc, 0x05, 0xe2, 0xb6, 0x65, 0xfd, 0x73, 0x8d, 0x34, 0xb6, 0x5c, 0x64, 0x27, 0x49,
	0xbe, 0x78, 0xa4, 0x99, 0xb9, 0xb4, 0x96, 0xa3, 0xb9, 0xb8, 0x26, 0x36, 0xf1, 0xce, 0xe3, 0x57,
	0xd7, 0xfc, 0x19, 0x9c, 0x44, 0xfd, 0xe9, 0x4c, 0x1c, 0x64, 0xe7, 0x3d, 0x54, 0x8f, 0xc8, 0x22,
	0x0a, 0xe8, 0x72, 0xec, 0xb9, 0x1b, 0xdd, 0x73, 0x73, 0x80, 0x62, 0x74, 0xd8, 0xa2, 0xe5, 0x33,
	0x4c, 0xe3, 0x42, 0x18, 0x96, 0xe3, 0x36, 0x82, 0x29, 0x34, 0x6e, 0x73, 0xc8, 0xe2, 0x31, 0x2a,
	0xba, 0x4b, 0x6e, 0x4d, 0x86, 0xf6, 0xcc, 0x7a, 0xfe, 0xec, 0xaf, 0xc8, 0x8b, 0x80, 0xb4, 0x99,
	0xb4, 0xcc, 0x4a, 0xcb, 0xc3, 0xd1, 0xd5, 0x96, 0x8d, 0x82, 0x29, 0xf6, 0x76, 0xca, 0x83, 0x76,
	0xbc, 0xee, 0x42, 0x75, 0xd9, 0xcd, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa9, 0x3e, 0x1e, 0x28,
	0xd0, 0x06, 0x00, 0x00,
}
